name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      
      - name: Install dependencies
        run: bun install
      
      - name: Run tests
        run: bun test
      
      - name: Build
        run: bun run build
      
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
      - name: Update package.json version
        run: |
          VERSION="${GITHUB_REF#refs/tags/v}"
          npm version $VERSION --no-git-tag-version --allow-same-version
          echo "Updated package.json to version $VERSION"
      
      - name: Rebuild with updated version
        run: bun run build
      
      - name: Generate release notes
        id: generate_notes
        run: |
          # Get previous tag
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          
          # Generate changelog
          if [ -n "$PREV_TAG" ]; then
            CHANGELOG=$(git log ${PREV_TAG}..HEAD --pretty=format:"- %s (%h)" --reverse)
          else
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" --reverse)
          fi
          
          # Create release notes
          cat > release-notes.md << EOF
          ## What's Changed
          
          ${CHANGELOG}
          
          **Full Changelog**: https://github.com/${{ github.repository }}/compare/${PREV_TAG}...v${{ steps.get_version.outputs.VERSION }}
          
          ## Installation
          
          \`\`\`bash
          npm install -g tfvm@${{ steps.get_version.outputs.VERSION }}
          \`\`\`
          
          or with yarn:
          
          \`\`\`bash
          yarn global add tfvm@${{ steps.get_version.outputs.VERSION }}
          \`\`\`
          
          or with pnpm:
          
          \`\`\`bash
          pnpm add -g tfvm@${{ steps.get_version.outputs.VERSION }}
          \`\`\`
          EOF
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          body_path: release-notes.md
          draft: false
          prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'alpha') || contains(github.ref, 'rc') }}
          files: |
            dist/tfvm.js
            package.json
            README.md
            LICENSE
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  publish-npm:
    name: Publish to npm
    runs-on: ubuntu-latest
    needs: release
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '24'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      
      - name: Install dependencies
        run: bun install
      
      - name: Update package.json version
        run: |
          VERSION="${GITHUB_REF#refs/tags/v}"
          npm version $VERSION --no-git-tag-version --allow-same-version
          echo "Updated package.json to version $VERSION"
      
      - name: Build
        run: bun run build
      
      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
